
message simple_bool = { v : bool }
message simple_byte = { v : byte }
message simple_int = { v : int }
message simple_long = { v : long }
message simple_float = { v : float }
message simple_string = { v : string }

type tuple 'a 'b = ('a * 'b)
message simple_tuple = { v : tuple<int, bool> }

message msg_sum =
    A { b : bool }
  | B { i : int }

type sum_type 'a 'b 'c = A 'a | B 'b | C 'c | D

message simple_sum = { v : sum_type<bool, byte, string> }

message nested_message = { v : simple_sum; b : int }

message lists_arrays = { lint : [int]; abool : [| bool |] }

message complex_rtt =
  A {
    a1 : [ ( int * [bool] ) ];
    a2 : [ sum_type<int, string, long> ]
    }
| B {
    b1 : bool;
    b2 : (string * [int])
  }

message msg1 = { a : int }
message msg1a = A { a : int } | B { b : string }
message msg1b = A { a : int; a' : int } | B { b : string; b' : string }

type int_or_stuff 'a = Int int | Stuff 'a

message msg1c = { a : int_or_stuff<string> }
