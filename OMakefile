USE_OCAMLFIND = true
NATIVE_ENABLED = true
BYTE_ENABLED = true

OCAMLDEPFLAGS = -pp "camlp4orf"
OCAMLFLAGS = -dtypes -pp "camlp4orf"
OCAMLOPTFLAGS = -inline 100 
OCAMLCFLAGS += -g

OCAMLPACKS[] =
	camlp4
	extlib

CamlSources(mods) =
	foreach(mod, $(mods))
		$(addsuffixes .cmo .cmi .cmx .sig $(EXT_OBJ), $(mod)):

.SUBDIRS: runtime test

EXTPROT_OBJS[] =
	parser
	ptypes
	gencode
	gen_OCaml

section
	section
		OCAMLFLAGS += -for-pack Extprot_gen
		CamlSources($(EXTPROT_OBJS))
	OCamlPackage(extprot_gen, $(EXTPROT_OBJS))
	OCamlLibrary(extprot_gen, extprot_gen)

section
	OCAML_LIBS = extprot_gen
	OCAMLPACKS += camlp4.lib
	OCamlProgram(sample, sample)

%.sig: %.ml %.cmo
	$(OCAMLFIND) $(OCAMLC) -package $(concat \,, $(OCAMLPACKS)) \
	    $(mapprefix -I, $(OCAMLINCLUDES)) \
	    $(OCAMLFLAGS) $(OCAMLCFLAGS) -i $< > $@

.DEFAULT: extprot_gen.cma extprot_gen.cmxa sample

.PHONY: clean
clean:
	rm -f $(filter-proper-targets $(ls R, .))

